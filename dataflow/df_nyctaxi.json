{
	"name": "df_nyctaxi",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NYCSourceData",
						"type": "DatasetReference"
					},
					"name": "NYCTaxiData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_NYCTaxiDataAgg",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectAllColumns"
				},
				{
					"name": "GetCountofTripByPickupLocation"
				},
				{
					"name": "TotalDistanceByStartLocation"
				},
				{
					"name": "OriginalData"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select1"
				}
			],
			"script": "\n\nsource(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\trate_code as string,\n\t\tstore_and_fwd_flag as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_time_in_secs as string,\n\t\ttrip_distance as string,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tinferDriftedColumnTypes: true) ~> NYCTaxiData\nNYCTaxiData select(mapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAllColumns\nSelectAllColumns aggregate(groupBy(pickup_longitude,\n\t\tpickup_latitude),\n\tCountByStartLocation = count(),\n\t\tmedallion = first(medallion),\n\t\tvendor_id = first(vendor_id),\n\t\tpickup_datetime = first(pickup_datetime),\n\t\tdropoff_datetime = first(dropoff_datetime)) ~> GetCountofTripByPickupLocation\nSelectAllColumns aggregate(groupBy(pickup_longitude,\n\t\tpickup_latitude),\n\tTotalDistancebyStartLocation = sum(toDouble(trip_distance)),\n\t\tmedallion = first(medallion),\n\t\tvendor_id = first(vendor_id),\n\t\tpickup_datetime = first(pickup_datetime),\n\t\tdropoff_datetime = first(dropoff_datetime)) ~> TotalDistanceByStartLocation\nSelectAllColumns select(mapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OriginalData\nOriginalData, GetCountofTripByPickupLocation join(OriginalData@medallion == GetCountofTripByPickupLocation@medallion\n\t&& OriginalData@vendor_id == GetCountofTripByPickupLocation@vendor_id\n\t&& OriginalData@pickup_datetime == GetCountofTripByPickupLocation@pickup_datetime\n\t&& OriginalData@dropoff_datetime == GetCountofTripByPickupLocation@dropoff_datetime,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nJoin1, TotalDistanceByStartLocation join(OriginalData@medallion == TotalDistanceByStartLocation@medallion\n\t&& OriginalData@vendor_id == TotalDistanceByStartLocation@vendor_id\n\t&& OriginalData@pickup_datetime == TotalDistanceByStartLocation@pickup_datetime\n\t&& OriginalData@dropoff_datetime == TotalDistanceByStartLocation@dropoff_datetime,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join2\nJoin2 select(mapColumn(\n\t\tmedallion = OriginalData@medallion,\n\t\thack_license,\n\t\tvendor_id = OriginalData@vendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime = OriginalData@pickup_datetime,\n\t\tdropoff_datetime = OriginalData@dropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude = OriginalData@pickup_longitude,\n\t\tpickup_latitude = OriginalData@pickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tCountByStartLocation,\n\t\tTotalDistancebyStartLocation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table') ~> sink1"
		}
	}
}